import java.io.*;
import java.util.*;

public class Main {

  public static class PriorityQueue {
    ArrayList<Integer> data;

    public PriorityQueue() {
      data = new ArrayList<>();
    }

    public void swap(int a, int b){
      int temp = data.get(a);
      data.set(a, data.get(b));
      data.set(b, temp);


    }
    private void theap(int s){
      if(s==0){
        return;
      }
      int p=0;
      if(s%2==0){
        p = (s-2)/2;
      }else{
        p = (s-1)/2;
      }
      if(data.get(p)>data.get(s)){
        swap(p, s);
        theap(p);
      }

    }

    public void dheap(int s){
      int l = 2*s+1;
      int r = 2*s+2;

      int mini = s;

      if(l<data.size() && data.get(l)<data.get(mini)){
        mini = l;
      }

      if(r<data.size() && data.get(r)<data.get(mini)){
        mini = r;
      }

      if(mini!=s){
        swap(mini, s);
        dheap(s);
      }

    }
    public void add(int val) {
      // write your code here
      data.add(val);
      theap(data.size()-1);

    }

    public int remove() {
      // write your code here
      if(data.size()==0){
        System.out.println("Underflow");
        return -1;
      }
      swap(0, data.size()-1);
      int val = data.remove(data.size()-1);
      dheap(0);
      return val;
    }

    public int peek() {
      // write your code here
      if(data.size()==0){
        System.out.println("Underflow");
        return -1;
      }
      return data.get(0);
    }

    public int size() {
      // write your code here
      return data.size();
    }
  }

  public static void main(String[] args) throws Exception {
    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    PriorityQueue qu = new PriorityQueue();

    String str = br.readLine();
    while (str.equals("quit") == false) {
      if (str.startsWith("add")) {
        int val = Integer.parseInt(str.split(" ")[1]);
        qu.add(val);
      } else if (str.startsWith("remove")) {
        int val = qu.remove();
        if (val != -1) {
          System.out.println(val);
        }
      } else if (str.startsWith("peek")) {
        int val = qu.peek();
        if (val != -1) {
          System.out.println(val);
        }
      } else if (str.startsWith("size")) {
        System.out.println(qu.size());
      }
      str = br.readLine();
    }
  }
}
